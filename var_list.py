# Здесь будут перечисленны все переменные, которые могут быть использованы в программе

# Импорт нужных библиотек
import subprocess
from pathlib import Path #Надо для создания переменной, внутри которой будет путь к файлу
# Создание статичных переменных для контроля работы скрипта

tell = 'Hello world'

# Создание переменных bash

# СОЗДАНИЕ КОМНДЫ pwd
# ВОПРОСЫ: Ошибка команды, что тогда делать?
output_pwd = subprocess.run(['pwd'], stdout=subprocess.PIPE) # Теперь переменная output_pwd хранит информаци., выполнено ли это. Если ответ 0, значит все ОК. Часть stdout=subprocess.PIPE дает возможность вывести результаты команды на print
#print(output_pwd.stdout.decode('utf-8')) #Это способ вывода результата выполненая команды в формате UTF-8
# Теперь я хочу создать переменнуЮ, которая будет вызываться print-ом и показывать свой результат
pwd_print = (output_pwd.stdout.decode('utf-8')) # Это и есть переменная, которуЮ уже в дальнейшем можно спользовать в других местах, она будет конкретно показыать на экран вывод команды

# СОЗДАНИЕ КОМАНДЫ ls
output_ls = subprocess.run(['ls'], stdout=subprocess.PIPE) # Теперь переменная output_pwd хранит информаци., выполнено ли это. Если ответ 0, значит все ОК. Часть stdout=subprocess.PIPE дает возможность вывести результаты команды на print
#print(output_ls.stdout.decode('utf-8')) #Это способ вывода результата выполненая команды в формате UTF-8
# Теперь я хочу создать переменнуЮ, которая будет вызываться print-ом и показывать свой результат
ls_print = (output_ls.stdout.decode('utf-8')) # Это и есть переменная, которуЮ уже в дальнейшем можно спользовать в других местах, она будет конкретно показыать на экран вывод команды

# Создаем переменнуЮ, которая будет содержать в себе ссылку на файл, где лежит список нужный для проверки
checklist = ('/tmp/vimless_check_line')



# Создание переменной, которуЮ заполнит пользователь, когда введет данные
user_entered_data = () 
